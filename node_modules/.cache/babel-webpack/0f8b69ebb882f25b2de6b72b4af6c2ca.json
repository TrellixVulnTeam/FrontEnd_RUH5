{"ast":null,"code":"import _asyncToGenerator from \"/Users/khangtran/Documents/GitHub/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { BrowserFetcher } from './BrowserFetcher.js';\nimport { Browser } from '../common/Browser.js';\nimport { BrowserRunner } from './BrowserRunner.js';\nimport { promisify } from 'util';\nconst mkdtempAsync = promisify(fs.mkdtemp);\nconst writeFileAsync = promisify(fs.writeFile);\n/**\n * @internal\n */\n\nclass ChromeLauncher {\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  launch(options = {}) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        ignoreDefaultArgs = false,\n        args = [],\n        dumpio = false,\n        executablePath = null,\n        pipe = false,\n        env = process.env,\n        handleSIGINT = true,\n        handleSIGTERM = true,\n        handleSIGHUP = true,\n        ignoreHTTPSErrors = false,\n        defaultViewport = {\n          width: 800,\n          height: 600\n        },\n        slowMo = 0,\n        timeout = 30000,\n        waitForInitialPage = true\n      } = options;\n      const profilePath = path.join(os.tmpdir(), 'puppeteer_dev_chrome_profile-');\n      const chromeArguments = [];\n      if (!ignoreDefaultArgs) chromeArguments.push(..._this.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) chromeArguments.push(..._this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));else chromeArguments.push(...args);\n      let temporaryUserDataDir = null;\n      if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-'))) chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n\n      if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n        temporaryUserDataDir = yield mkdtempAsync(profilePath);\n        chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n      }\n\n      let chromeExecutable = executablePath;\n\n      if (!executablePath) {\n        // Use Intel x86 builds on Apple M1 until native macOS arm64\n        // Chromium builds are available.\n        if (os.platform() !== 'darwin' && os.arch() === 'arm64') {\n          chromeExecutable = '/usr/bin/chromium-browser';\n        } else {\n          const {\n            missingText,\n            executablePath\n          } = resolveExecutablePath(_this);\n          if (missingText) throw new Error(missingText);\n          chromeExecutable = executablePath;\n        }\n      }\n\n      const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n      const runner = new BrowserRunner(_this.product, chromeExecutable, chromeArguments, temporaryUserDataDir);\n      runner.start({\n        handleSIGHUP,\n        handleSIGTERM,\n        handleSIGINT,\n        dumpio,\n        env,\n        pipe: usePipe\n      });\n\n      try {\n        const connection = yield runner.setupConnection({\n          usePipe,\n          timeout,\n          slowMo,\n          preferredRevision: _this._preferredRevision\n        });\n        const browser = yield Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n        if (waitForInitialPage) yield browser.waitForTarget(t => t.type() === 'page');\n        return browser;\n      } catch (error) {\n        runner.kill();\n        throw error;\n      }\n    })();\n  }\n\n  defaultArgs(options = {}) {\n    const chromeArguments = ['--disable-background-networking', '--enable-features=NetworkService,NetworkServiceInProcess', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-component-extensions-with-background-pages', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions', '--disable-features=Translate', '--disable-hang-monitor', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-sync', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--enable-automation', '--password-store=basic', '--use-mock-keychain', // TODO(sadym): remove '--enable-blink-features=IdleDetection'\n    // once IdleDetection is turned on by default.\n    '--enable-blink-features=IdleDetection'];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    if (userDataDir) chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n    if (devtools) chromeArguments.push('--auto-open-devtools-for-tabs');\n\n    if (headless) {\n      chromeArguments.push('--headless', '--hide-scrollbars', '--mute-audio');\n    }\n\n    if (args.every(arg => arg.startsWith('-'))) chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  executablePath() {\n    return resolveExecutablePath(this).executablePath;\n  }\n\n  get product() {\n    return 'chrome';\n  }\n\n}\n/**\n * @internal\n */\n\n\nclass FirefoxLauncher {\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  launch(options = {}) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        ignoreDefaultArgs = false,\n        args = [],\n        dumpio = false,\n        executablePath = null,\n        pipe = false,\n        env = process.env,\n        handleSIGINT = true,\n        handleSIGTERM = true,\n        handleSIGHUP = true,\n        ignoreHTTPSErrors = false,\n        defaultViewport = {\n          width: 800,\n          height: 600\n        },\n        slowMo = 0,\n        timeout = 30000,\n        extraPrefsFirefox = {},\n        waitForInitialPage = true\n      } = options;\n      const firefoxArguments = [];\n      if (!ignoreDefaultArgs) firefoxArguments.push(..._this2.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) firefoxArguments.push(..._this2.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));else firefoxArguments.push(...args);\n      if (!firefoxArguments.some(argument => argument.startsWith('--remote-debugging-'))) firefoxArguments.push('--remote-debugging-port=0');\n      let temporaryUserDataDir = null;\n\n      if (!firefoxArguments.includes('-profile') && !firefoxArguments.includes('--profile')) {\n        temporaryUserDataDir = yield _this2._createProfile(extraPrefsFirefox);\n        firefoxArguments.push('--profile');\n        firefoxArguments.push(temporaryUserDataDir);\n      }\n\n      yield _this2._updateRevision();\n      let firefoxExecutable = executablePath;\n\n      if (!executablePath) {\n        const {\n          missingText,\n          executablePath\n        } = resolveExecutablePath(_this2);\n        if (missingText) throw new Error(missingText);\n        firefoxExecutable = executablePath;\n      }\n\n      const runner = new BrowserRunner(_this2.product, firefoxExecutable, firefoxArguments, temporaryUserDataDir);\n      runner.start({\n        handleSIGHUP,\n        handleSIGTERM,\n        handleSIGINT,\n        dumpio,\n        env,\n        pipe\n      });\n\n      try {\n        const connection = yield runner.setupConnection({\n          usePipe: pipe,\n          timeout,\n          slowMo,\n          preferredRevision: _this2._preferredRevision\n        });\n        const browser = yield Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n        if (waitForInitialPage) yield browser.waitForTarget(t => t.type() === 'page');\n        return browser;\n      } catch (error) {\n        runner.kill();\n        throw error;\n      }\n    })();\n  }\n\n  executablePath() {\n    return resolveExecutablePath(this).executablePath;\n  }\n\n  _updateRevision() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      // replace 'latest' placeholder with actual downloaded revision\n      if (_this3._preferredRevision === 'latest') {\n        const browserFetcher = new BrowserFetcher(_this3._projectRoot, {\n          product: _this3.product\n        });\n        const localRevisions = yield browserFetcher.localRevisions();\n        if (localRevisions[0]) _this3._preferredRevision = localRevisions[0];\n      }\n    })();\n  }\n\n  get product() {\n    return 'firefox';\n  }\n\n  defaultArgs(options = {}) {\n    const firefoxArguments = ['--no-remote', '--foreground'];\n\n    if (os.platform().startsWith('win')) {\n      firefoxArguments.push('--wait-for-browser');\n    }\n\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n\n    if (headless) firefoxArguments.push('--headless');\n    if (devtools) firefoxArguments.push('--devtools');\n    if (args.every(arg => arg.startsWith('-'))) firefoxArguments.push('about:blank');\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n\n  _createProfile(extraPrefs) {\n    return _asyncToGenerator(function* () {\n      const profilePath = yield mkdtempAsync(path.join(os.tmpdir(), 'puppeteer_dev_firefox_profile-'));\n      const prefsJS = [];\n      const userJS = [];\n      const server = 'dummy.test';\n      const defaultPreferences = {\n        // Make sure Shield doesn't hit the network.\n        'app.normandy.api_url': '',\n        // Disable Firefox old build background check\n        'app.update.checkInstallTime': false,\n        // Disable automatically upgrading Firefox\n        'app.update.disabledForTesting': true,\n        // Increase the APZ content response timeout to 1 minute\n        'apz.content_response_timeout': 60000,\n        // Prevent various error message on the console\n        // jest-puppeteer asserts that no error message is emitted by the console\n        'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n        // Enable the dump function: which sends messages to the system\n        // console\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n        'browser.dom.window.dump.enabled': true,\n        // Disable topstories\n        'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n        // Always display a blank page\n        'browser.newtabpage.enabled': false,\n        // Background thumbnails in particular cause grief: and disabling\n        // thumbnails in general cannot hurt\n        'browser.pagethumbnails.capturing_disabled': true,\n        // Disable safebrowsing components.\n        'browser.safebrowsing.blockedURIs.enabled': false,\n        'browser.safebrowsing.downloads.enabled': false,\n        'browser.safebrowsing.malware.enabled': false,\n        'browser.safebrowsing.passwords.enabled': false,\n        'browser.safebrowsing.phishing.enabled': false,\n        // Disable updates to search engines.\n        'browser.search.update': false,\n        // Do not restore the last open set of tabs if the browser has crashed\n        'browser.sessionstore.resume_from_crash': false,\n        // Skip check for default browser on startup\n        'browser.shell.checkDefaultBrowser': false,\n        // Disable newtabpage\n        'browser.startup.homepage': 'about:blank',\n        // Do not redirect user when a milstone upgrade of Firefox is detected\n        'browser.startup.homepage_override.mstone': 'ignore',\n        // Start with a blank page about:blank\n        'browser.startup.page': 0,\n        // Do not allow background tabs to be zombified on Android: otherwise for\n        // tests that open additional tabs: the test harness tab itself might get\n        // unloaded\n        'browser.tabs.disableBackgroundZombification': false,\n        // Do not warn when closing all other open tabs\n        'browser.tabs.warnOnCloseOtherTabs': false,\n        // Do not warn when multiple tabs will be opened\n        'browser.tabs.warnOnOpen': false,\n        // Disable the UI tour.\n        'browser.uitour.enabled': false,\n        // Turn off search suggestions in the location bar so as not to trigger\n        // network connections.\n        'browser.urlbar.suggest.searches': false,\n        // Disable first run splash page on Windows 10\n        'browser.usedOnWindows10.introURL': '',\n        // Do not warn on quitting Firefox\n        'browser.warnOnQuit': false,\n        // Defensively disable data reporting systems\n        'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n        'datareporting.healthreport.logging.consoleEnabled': false,\n        'datareporting.healthreport.service.enabled': false,\n        'datareporting.healthreport.service.firstRun': false,\n        'datareporting.healthreport.uploadEnabled': false,\n        // Do not show datareporting policy notifications which can interfere with tests\n        'datareporting.policy.dataSubmissionEnabled': false,\n        'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n        // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n        // This doesn't affect Puppeteer but spams console (Bug 1424372)\n        'devtools.jsonview.enabled': false,\n        // Disable popup-blocker\n        'dom.disable_open_during_load': false,\n        // Enable the support for File object creation in the content process\n        // Required for |Page.setFileInputFiles| protocol method.\n        'dom.file.createInChild': true,\n        // Disable the ProcessHangMonitor\n        'dom.ipc.reportProcessHangs': false,\n        // Disable slow script dialogues\n        'dom.max_chrome_script_run_time': 0,\n        'dom.max_script_run_time': 0,\n        // Only load extensions from the application and user profile\n        // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n        'extensions.autoDisableScopes': 0,\n        'extensions.enabledScopes': 5,\n        // Disable metadata caching for installed add-ons by default\n        'extensions.getAddons.cache.enabled': false,\n        // Disable installing any distribution extensions or add-ons.\n        'extensions.installDistroAddons': false,\n        // Disabled screenshots extension\n        'extensions.screenshots.disabled': true,\n        // Turn off extension updates so they do not bother tests\n        'extensions.update.enabled': false,\n        // Turn off extension updates so they do not bother tests\n        'extensions.update.notifyUser': false,\n        // Make sure opening about:addons will not hit the network\n        'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n        // Force disable Fission until the Remote Agent is compatible\n        'fission.autostart': false,\n        // Allow the application to have focus even it runs in the background\n        'focusmanager.testmode': true,\n        // Disable useragent updates\n        'general.useragent.updates.enabled': false,\n        // Always use network provider for geolocation tests so we bypass the\n        // macOS dialog raised by the corelocation provider\n        'geo.provider.testing': true,\n        // Do not scan Wifi\n        'geo.wifi.scan': false,\n        // No hang monitor\n        'hangmonitor.timeout': 0,\n        // Show chrome errors and warnings in the error console\n        'javascript.options.showInConsole': true,\n        // Disable download and usage of OpenH264: and Widevine plugins\n        'media.gmp-manager.updateEnabled': false,\n        // Prevent various error message on the console\n        // jest-puppeteer asserts that no error message is emitted by the console\n        'network.cookie.cookieBehavior': 0,\n        // Disable experimental feature that is only available in Nightly\n        'network.cookie.sameSite.laxByDefault': false,\n        // Do not prompt for temporary redirects\n        'network.http.prompt-temp-redirect': false,\n        // Disable speculative connections so they are not reported as leaking\n        // when they are hanging around\n        'network.http.speculative-parallel-limit': 0,\n        // Do not automatically switch between offline and online\n        'network.manage-offline-status': false,\n        // Make sure SNTP requests do not hit the network\n        'network.sntp.pools': server,\n        // Disable Flash.\n        'plugin.state.flash': 0,\n        'privacy.trackingprotection.enabled': false,\n        // Can be removed once Firefox 89 is no longer supported\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n        'remote.enabled': true,\n        // Don't do network connections for mitm priming\n        'security.certerrors.mitm.priming.enabled': false,\n        // Local documents have access to all other local documents,\n        // including directory listings\n        'security.fileuri.strict_origin_policy': false,\n        // Do not wait for the notification button security delay\n        'security.notification_enable_delay': 0,\n        // Ensure blocklist updates do not hit the network\n        'services.settings.server': `http://${server}/dummy/blocklist/`,\n        // Do not automatically fill sign-in forms with known usernames and\n        // passwords\n        'signon.autofillForms': false,\n        // Disable password capture, so that tests that include forms are not\n        // influenced by the presence of the persistent doorhanger notification\n        'signon.rememberSignons': false,\n        // Disable first-run welcome page\n        'startup.homepage_welcome_url': 'about:blank',\n        // Disable first-run welcome page\n        'startup.homepage_welcome_url.additional': '',\n        // Disable browser animations (tabs, fullscreen, sliding alerts)\n        'toolkit.cosmeticAnimations.enabled': false,\n        // Prevent starting into safe mode after application crashes\n        'toolkit.startup.max_resumed_crashes': -1\n      };\n      Object.assign(defaultPreferences, extraPrefs);\n\n      for (const [key, value] of Object.entries(defaultPreferences)) userJS.push(`user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`);\n\n      yield writeFileAsync(path.join(profilePath, 'user.js'), userJS.join('\\n'));\n      yield writeFileAsync(path.join(profilePath, 'prefs.js'), prefsJS.join('\\n'));\n      return profilePath;\n    })();\n  }\n\n}\n\nfunction resolveExecutablePath(launcher) {\n  let downloadPath; // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n\n  if (!launcher._isPuppeteerCore) {\n    const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH || process.env.npm_config_puppeteer_executable_path || process.env.npm_package_config_puppeteer_executable_path;\n\n    if (executablePath) {\n      const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n      return {\n        executablePath,\n        missingText\n      };\n    }\n\n    downloadPath = process.env.PUPPETEER_DOWNLOAD_PATH || process.env.npm_config_puppeteer_download_path || process.env.npm_package_config_puppeteer_download_path;\n  }\n\n  const browserFetcher = new BrowserFetcher(launcher._projectRoot, {\n    product: launcher.product,\n    path: downloadPath\n  });\n\n  if (!launcher._isPuppeteerCore && launcher.product === 'chrome') {\n    const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n\n    if (revision) {\n      const revisionInfo = browserFetcher.revisionInfo(revision);\n      const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n      return {\n        executablePath: revisionInfo.executablePath,\n        missingText\n      };\n    }\n  }\n\n  const revisionInfo = browserFetcher.revisionInfo(launcher._preferredRevision);\n  const firefoxHelp = `Run \\`PUPPETEER_PRODUCT=firefox npm install\\` to download a supported Firefox browser binary.`;\n  const chromeHelp = `Run \\`npm install\\` to download the correct Chromium revision (${launcher._preferredRevision}).`;\n  const missingText = !revisionInfo.local ? `Could not find expected browser (${launcher.product}) locally. ${launcher.product === 'chrome' ? chromeHelp : firefoxHelp}` : null;\n  return {\n    executablePath: revisionInfo.executablePath,\n    missingText\n  };\n}\n/**\n * @internal\n */\n\n\nexport default function Launcher(projectRoot, preferredRevision, isPuppeteerCore, product) {\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!product && !isPuppeteerCore) product = process.env.PUPPETEER_PRODUCT || process.env.npm_config_puppeteer_product || process.env.npm_package_config_puppeteer_product;\n\n  switch (product) {\n    case 'firefox':\n      return new FirefoxLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n\n    case 'chrome':\n    default:\n      if (typeof product !== 'undefined' && product !== 'chrome') {\n        /* The user gave us an incorrect product name\n         * we'll default to launching Chrome, but log to the console\n         * to let the user know (they've probably typoed).\n         */\n        console.warn(`Warning: unknown product name ${product}. Falling back to chrome.`);\n      }\n\n      return new ChromeLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n} //# sourceMappingURL=Launcher.js.map","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/FrontEnd/node_modules/puppeteer/lib/esm/puppeteer/node/Launcher.js"],"names":["os","path","fs","BrowserFetcher","Browser","BrowserRunner","promisify","mkdtempAsync","mkdtemp","writeFileAsync","writeFile","ChromeLauncher","constructor","projectRoot","preferredRevision","isPuppeteerCore","_projectRoot","_preferredRevision","_isPuppeteerCore","launch","options","ignoreDefaultArgs","args","dumpio","executablePath","pipe","env","process","handleSIGINT","handleSIGTERM","handleSIGHUP","ignoreHTTPSErrors","defaultViewport","width","height","slowMo","timeout","waitForInitialPage","profilePath","join","tmpdir","chromeArguments","push","defaultArgs","Array","isArray","filter","arg","includes","temporaryUserDataDir","some","argument","startsWith","chromeExecutable","platform","arch","missingText","resolveExecutablePath","Error","usePipe","runner","product","start","connection","setupConnection","browser","create","proc","close","bind","waitForTarget","t","type","error","kill","devtools","headless","userDataDir","resolve","every","FirefoxLauncher","extraPrefsFirefox","firefoxArguments","_createProfile","_updateRevision","firefoxExecutable","browserFetcher","localRevisions","extraPrefs","prefsJS","userJS","server","defaultPreferences","Object","assign","key","value","entries","JSON","stringify","launcher","downloadPath","PUPPETEER_EXECUTABLE_PATH","npm_config_puppeteer_executable_path","npm_package_config_puppeteer_executable_path","existsSync","PUPPETEER_DOWNLOAD_PATH","npm_config_puppeteer_download_path","npm_package_config_puppeteer_download_path","revision","revisionInfo","local","firefoxHelp","chromeHelp","Launcher","PUPPETEER_PRODUCT","npm_config_puppeteer_product","npm_package_config_puppeteer_product","console","warn"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { BrowserFetcher } from './BrowserFetcher.js';\nimport { Browser } from '../common/Browser.js';\nimport { BrowserRunner } from './BrowserRunner.js';\nimport { promisify } from 'util';\nconst mkdtempAsync = promisify(fs.mkdtemp);\nconst writeFileAsync = promisify(fs.writeFile);\n/**\n * @internal\n */\nclass ChromeLauncher {\n    constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n        this._projectRoot = projectRoot;\n        this._preferredRevision = preferredRevision;\n        this._isPuppeteerCore = isPuppeteerCore;\n    }\n    async launch(options = {}) {\n        const { ignoreDefaultArgs = false, args = [], dumpio = false, executablePath = null, pipe = false, env = process.env, handleSIGINT = true, handleSIGTERM = true, handleSIGHUP = true, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, slowMo = 0, timeout = 30000, waitForInitialPage = true, } = options;\n        const profilePath = path.join(os.tmpdir(), 'puppeteer_dev_chrome_profile-');\n        const chromeArguments = [];\n        if (!ignoreDefaultArgs)\n            chromeArguments.push(...this.defaultArgs(options));\n        else if (Array.isArray(ignoreDefaultArgs))\n            chromeArguments.push(...this.defaultArgs(options).filter((arg) => !ignoreDefaultArgs.includes(arg)));\n        else\n            chromeArguments.push(...args);\n        let temporaryUserDataDir = null;\n        if (!chromeArguments.some((argument) => argument.startsWith('--remote-debugging-')))\n            chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n        if (!chromeArguments.some((arg) => arg.startsWith('--user-data-dir'))) {\n            temporaryUserDataDir = await mkdtempAsync(profilePath);\n            chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n        }\n        let chromeExecutable = executablePath;\n        if (!executablePath) {\n            // Use Intel x86 builds on Apple M1 until native macOS arm64\n            // Chromium builds are available.\n            if (os.platform() !== 'darwin' && os.arch() === 'arm64') {\n                chromeExecutable = '/usr/bin/chromium-browser';\n            }\n            else {\n                const { missingText, executablePath } = resolveExecutablePath(this);\n                if (missingText)\n                    throw new Error(missingText);\n                chromeExecutable = executablePath;\n            }\n        }\n        const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n        const runner = new BrowserRunner(this.product, chromeExecutable, chromeArguments, temporaryUserDataDir);\n        runner.start({\n            handleSIGHUP,\n            handleSIGTERM,\n            handleSIGINT,\n            dumpio,\n            env,\n            pipe: usePipe,\n        });\n        try {\n            const connection = await runner.setupConnection({\n                usePipe,\n                timeout,\n                slowMo,\n                preferredRevision: this._preferredRevision,\n            });\n            const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n            if (waitForInitialPage)\n                await browser.waitForTarget((t) => t.type() === 'page');\n            return browser;\n        }\n        catch (error) {\n            runner.kill();\n            throw error;\n        }\n    }\n    defaultArgs(options = {}) {\n        const chromeArguments = [\n            '--disable-background-networking',\n            '--enable-features=NetworkService,NetworkServiceInProcess',\n            '--disable-background-timer-throttling',\n            '--disable-backgrounding-occluded-windows',\n            '--disable-breakpad',\n            '--disable-client-side-phishing-detection',\n            '--disable-component-extensions-with-background-pages',\n            '--disable-default-apps',\n            '--disable-dev-shm-usage',\n            '--disable-extensions',\n            '--disable-features=Translate',\n            '--disable-hang-monitor',\n            '--disable-ipc-flooding-protection',\n            '--disable-popup-blocking',\n            '--disable-prompt-on-repost',\n            '--disable-renderer-backgrounding',\n            '--disable-sync',\n            '--force-color-profile=srgb',\n            '--metrics-recording-only',\n            '--no-first-run',\n            '--enable-automation',\n            '--password-store=basic',\n            '--use-mock-keychain',\n            // TODO(sadym): remove '--enable-blink-features=IdleDetection'\n            // once IdleDetection is turned on by default.\n            '--enable-blink-features=IdleDetection',\n        ];\n        const { devtools = false, headless = !devtools, args = [], userDataDir = null, } = options;\n        if (userDataDir)\n            chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n        if (devtools)\n            chromeArguments.push('--auto-open-devtools-for-tabs');\n        if (headless) {\n            chromeArguments.push('--headless', '--hide-scrollbars', '--mute-audio');\n        }\n        if (args.every((arg) => arg.startsWith('-')))\n            chromeArguments.push('about:blank');\n        chromeArguments.push(...args);\n        return chromeArguments;\n    }\n    executablePath() {\n        return resolveExecutablePath(this).executablePath;\n    }\n    get product() {\n        return 'chrome';\n    }\n}\n/**\n * @internal\n */\nclass FirefoxLauncher {\n    constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n        this._projectRoot = projectRoot;\n        this._preferredRevision = preferredRevision;\n        this._isPuppeteerCore = isPuppeteerCore;\n    }\n    async launch(options = {}) {\n        const { ignoreDefaultArgs = false, args = [], dumpio = false, executablePath = null, pipe = false, env = process.env, handleSIGINT = true, handleSIGTERM = true, handleSIGHUP = true, ignoreHTTPSErrors = false, defaultViewport = { width: 800, height: 600 }, slowMo = 0, timeout = 30000, extraPrefsFirefox = {}, waitForInitialPage = true, } = options;\n        const firefoxArguments = [];\n        if (!ignoreDefaultArgs)\n            firefoxArguments.push(...this.defaultArgs(options));\n        else if (Array.isArray(ignoreDefaultArgs))\n            firefoxArguments.push(...this.defaultArgs(options).filter((arg) => !ignoreDefaultArgs.includes(arg)));\n        else\n            firefoxArguments.push(...args);\n        if (!firefoxArguments.some((argument) => argument.startsWith('--remote-debugging-')))\n            firefoxArguments.push('--remote-debugging-port=0');\n        let temporaryUserDataDir = null;\n        if (!firefoxArguments.includes('-profile') &&\n            !firefoxArguments.includes('--profile')) {\n            temporaryUserDataDir = await this._createProfile(extraPrefsFirefox);\n            firefoxArguments.push('--profile');\n            firefoxArguments.push(temporaryUserDataDir);\n        }\n        await this._updateRevision();\n        let firefoxExecutable = executablePath;\n        if (!executablePath) {\n            const { missingText, executablePath } = resolveExecutablePath(this);\n            if (missingText)\n                throw new Error(missingText);\n            firefoxExecutable = executablePath;\n        }\n        const runner = new BrowserRunner(this.product, firefoxExecutable, firefoxArguments, temporaryUserDataDir);\n        runner.start({\n            handleSIGHUP,\n            handleSIGTERM,\n            handleSIGINT,\n            dumpio,\n            env,\n            pipe,\n        });\n        try {\n            const connection = await runner.setupConnection({\n                usePipe: pipe,\n                timeout,\n                slowMo,\n                preferredRevision: this._preferredRevision,\n            });\n            const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n            if (waitForInitialPage)\n                await browser.waitForTarget((t) => t.type() === 'page');\n            return browser;\n        }\n        catch (error) {\n            runner.kill();\n            throw error;\n        }\n    }\n    executablePath() {\n        return resolveExecutablePath(this).executablePath;\n    }\n    async _updateRevision() {\n        // replace 'latest' placeholder with actual downloaded revision\n        if (this._preferredRevision === 'latest') {\n            const browserFetcher = new BrowserFetcher(this._projectRoot, {\n                product: this.product,\n            });\n            const localRevisions = await browserFetcher.localRevisions();\n            if (localRevisions[0])\n                this._preferredRevision = localRevisions[0];\n        }\n    }\n    get product() {\n        return 'firefox';\n    }\n    defaultArgs(options = {}) {\n        const firefoxArguments = ['--no-remote', '--foreground'];\n        if (os.platform().startsWith('win')) {\n            firefoxArguments.push('--wait-for-browser');\n        }\n        const { devtools = false, headless = !devtools, args = [], userDataDir = null, } = options;\n        if (userDataDir) {\n            firefoxArguments.push('--profile');\n            firefoxArguments.push(userDataDir);\n        }\n        if (headless)\n            firefoxArguments.push('--headless');\n        if (devtools)\n            firefoxArguments.push('--devtools');\n        if (args.every((arg) => arg.startsWith('-')))\n            firefoxArguments.push('about:blank');\n        firefoxArguments.push(...args);\n        return firefoxArguments;\n    }\n    async _createProfile(extraPrefs) {\n        const profilePath = await mkdtempAsync(path.join(os.tmpdir(), 'puppeteer_dev_firefox_profile-'));\n        const prefsJS = [];\n        const userJS = [];\n        const server = 'dummy.test';\n        const defaultPreferences = {\n            // Make sure Shield doesn't hit the network.\n            'app.normandy.api_url': '',\n            // Disable Firefox old build background check\n            'app.update.checkInstallTime': false,\n            // Disable automatically upgrading Firefox\n            'app.update.disabledForTesting': true,\n            // Increase the APZ content response timeout to 1 minute\n            'apz.content_response_timeout': 60000,\n            // Prevent various error message on the console\n            // jest-puppeteer asserts that no error message is emitted by the console\n            'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n            // Enable the dump function: which sends messages to the system\n            // console\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n            'browser.dom.window.dump.enabled': true,\n            // Disable topstories\n            'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n            // Always display a blank page\n            'browser.newtabpage.enabled': false,\n            // Background thumbnails in particular cause grief: and disabling\n            // thumbnails in general cannot hurt\n            'browser.pagethumbnails.capturing_disabled': true,\n            // Disable safebrowsing components.\n            'browser.safebrowsing.blockedURIs.enabled': false,\n            'browser.safebrowsing.downloads.enabled': false,\n            'browser.safebrowsing.malware.enabled': false,\n            'browser.safebrowsing.passwords.enabled': false,\n            'browser.safebrowsing.phishing.enabled': false,\n            // Disable updates to search engines.\n            'browser.search.update': false,\n            // Do not restore the last open set of tabs if the browser has crashed\n            'browser.sessionstore.resume_from_crash': false,\n            // Skip check for default browser on startup\n            'browser.shell.checkDefaultBrowser': false,\n            // Disable newtabpage\n            'browser.startup.homepage': 'about:blank',\n            // Do not redirect user when a milstone upgrade of Firefox is detected\n            'browser.startup.homepage_override.mstone': 'ignore',\n            // Start with a blank page about:blank\n            'browser.startup.page': 0,\n            // Do not allow background tabs to be zombified on Android: otherwise for\n            // tests that open additional tabs: the test harness tab itself might get\n            // unloaded\n            'browser.tabs.disableBackgroundZombification': false,\n            // Do not warn when closing all other open tabs\n            'browser.tabs.warnOnCloseOtherTabs': false,\n            // Do not warn when multiple tabs will be opened\n            'browser.tabs.warnOnOpen': false,\n            // Disable the UI tour.\n            'browser.uitour.enabled': false,\n            // Turn off search suggestions in the location bar so as not to trigger\n            // network connections.\n            'browser.urlbar.suggest.searches': false,\n            // Disable first run splash page on Windows 10\n            'browser.usedOnWindows10.introURL': '',\n            // Do not warn on quitting Firefox\n            'browser.warnOnQuit': false,\n            // Defensively disable data reporting systems\n            'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n            'datareporting.healthreport.logging.consoleEnabled': false,\n            'datareporting.healthreport.service.enabled': false,\n            'datareporting.healthreport.service.firstRun': false,\n            'datareporting.healthreport.uploadEnabled': false,\n            // Do not show datareporting policy notifications which can interfere with tests\n            'datareporting.policy.dataSubmissionEnabled': false,\n            'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n            // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n            // This doesn't affect Puppeteer but spams console (Bug 1424372)\n            'devtools.jsonview.enabled': false,\n            // Disable popup-blocker\n            'dom.disable_open_during_load': false,\n            // Enable the support for File object creation in the content process\n            // Required for |Page.setFileInputFiles| protocol method.\n            'dom.file.createInChild': true,\n            // Disable the ProcessHangMonitor\n            'dom.ipc.reportProcessHangs': false,\n            // Disable slow script dialogues\n            'dom.max_chrome_script_run_time': 0,\n            'dom.max_script_run_time': 0,\n            // Only load extensions from the application and user profile\n            // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n            'extensions.autoDisableScopes': 0,\n            'extensions.enabledScopes': 5,\n            // Disable metadata caching for installed add-ons by default\n            'extensions.getAddons.cache.enabled': false,\n            // Disable installing any distribution extensions or add-ons.\n            'extensions.installDistroAddons': false,\n            // Disabled screenshots extension\n            'extensions.screenshots.disabled': true,\n            // Turn off extension updates so they do not bother tests\n            'extensions.update.enabled': false,\n            // Turn off extension updates so they do not bother tests\n            'extensions.update.notifyUser': false,\n            // Make sure opening about:addons will not hit the network\n            'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n            // Force disable Fission until the Remote Agent is compatible\n            'fission.autostart': false,\n            // Allow the application to have focus even it runs in the background\n            'focusmanager.testmode': true,\n            // Disable useragent updates\n            'general.useragent.updates.enabled': false,\n            // Always use network provider for geolocation tests so we bypass the\n            // macOS dialog raised by the corelocation provider\n            'geo.provider.testing': true,\n            // Do not scan Wifi\n            'geo.wifi.scan': false,\n            // No hang monitor\n            'hangmonitor.timeout': 0,\n            // Show chrome errors and warnings in the error console\n            'javascript.options.showInConsole': true,\n            // Disable download and usage of OpenH264: and Widevine plugins\n            'media.gmp-manager.updateEnabled': false,\n            // Prevent various error message on the console\n            // jest-puppeteer asserts that no error message is emitted by the console\n            'network.cookie.cookieBehavior': 0,\n            // Disable experimental feature that is only available in Nightly\n            'network.cookie.sameSite.laxByDefault': false,\n            // Do not prompt for temporary redirects\n            'network.http.prompt-temp-redirect': false,\n            // Disable speculative connections so they are not reported as leaking\n            // when they are hanging around\n            'network.http.speculative-parallel-limit': 0,\n            // Do not automatically switch between offline and online\n            'network.manage-offline-status': false,\n            // Make sure SNTP requests do not hit the network\n            'network.sntp.pools': server,\n            // Disable Flash.\n            'plugin.state.flash': 0,\n            'privacy.trackingprotection.enabled': false,\n            // Can be removed once Firefox 89 is no longer supported\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n            'remote.enabled': true,\n            // Don't do network connections for mitm priming\n            'security.certerrors.mitm.priming.enabled': false,\n            // Local documents have access to all other local documents,\n            // including directory listings\n            'security.fileuri.strict_origin_policy': false,\n            // Do not wait for the notification button security delay\n            'security.notification_enable_delay': 0,\n            // Ensure blocklist updates do not hit the network\n            'services.settings.server': `http://${server}/dummy/blocklist/`,\n            // Do not automatically fill sign-in forms with known usernames and\n            // passwords\n            'signon.autofillForms': false,\n            // Disable password capture, so that tests that include forms are not\n            // influenced by the presence of the persistent doorhanger notification\n            'signon.rememberSignons': false,\n            // Disable first-run welcome page\n            'startup.homepage_welcome_url': 'about:blank',\n            // Disable first-run welcome page\n            'startup.homepage_welcome_url.additional': '',\n            // Disable browser animations (tabs, fullscreen, sliding alerts)\n            'toolkit.cosmeticAnimations.enabled': false,\n            // Prevent starting into safe mode after application crashes\n            'toolkit.startup.max_resumed_crashes': -1,\n        };\n        Object.assign(defaultPreferences, extraPrefs);\n        for (const [key, value] of Object.entries(defaultPreferences))\n            userJS.push(`user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`);\n        await writeFileAsync(path.join(profilePath, 'user.js'), userJS.join('\\n'));\n        await writeFileAsync(path.join(profilePath, 'prefs.js'), prefsJS.join('\\n'));\n        return profilePath;\n    }\n}\nfunction resolveExecutablePath(launcher) {\n    let downloadPath;\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!launcher._isPuppeteerCore) {\n        const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH ||\n            process.env.npm_config_puppeteer_executable_path ||\n            process.env.npm_package_config_puppeteer_executable_path;\n        if (executablePath) {\n            const missingText = !fs.existsSync(executablePath)\n                ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' +\n                    executablePath\n                : null;\n            return { executablePath, missingText };\n        }\n        downloadPath =\n            process.env.PUPPETEER_DOWNLOAD_PATH ||\n                process.env.npm_config_puppeteer_download_path ||\n                process.env.npm_package_config_puppeteer_download_path;\n    }\n    const browserFetcher = new BrowserFetcher(launcher._projectRoot, {\n        product: launcher.product,\n        path: downloadPath,\n    });\n    if (!launcher._isPuppeteerCore && launcher.product === 'chrome') {\n        const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n        if (revision) {\n            const revisionInfo = browserFetcher.revisionInfo(revision);\n            const missingText = !revisionInfo.local\n                ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' +\n                    revisionInfo.executablePath\n                : null;\n            return { executablePath: revisionInfo.executablePath, missingText };\n        }\n    }\n    const revisionInfo = browserFetcher.revisionInfo(launcher._preferredRevision);\n    const firefoxHelp = `Run \\`PUPPETEER_PRODUCT=firefox npm install\\` to download a supported Firefox browser binary.`;\n    const chromeHelp = `Run \\`npm install\\` to download the correct Chromium revision (${launcher._preferredRevision}).`;\n    const missingText = !revisionInfo.local\n        ? `Could not find expected browser (${launcher.product}) locally. ${launcher.product === 'chrome' ? chromeHelp : firefoxHelp}`\n        : null;\n    return { executablePath: revisionInfo.executablePath, missingText };\n}\n/**\n * @internal\n */\nexport default function Launcher(projectRoot, preferredRevision, isPuppeteerCore, product) {\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!product && !isPuppeteerCore)\n        product =\n            process.env.PUPPETEER_PRODUCT ||\n                process.env.npm_config_puppeteer_product ||\n                process.env.npm_package_config_puppeteer_product;\n    switch (product) {\n        case 'firefox':\n            return new FirefoxLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n        case 'chrome':\n        default:\n            if (typeof product !== 'undefined' && product !== 'chrome') {\n                /* The user gave us an incorrect product name\n                 * we'll default to launching Chrome, but log to the console\n                 * to let the user know (they've probably typoed).\n                 */\n                console.warn(`Warning: unknown product name ${product}. Falling back to chrome.`);\n            }\n            return new ChromeLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n    }\n}\n//# sourceMappingURL=Launcher.js.map"]},"metadata":{},"sourceType":"module"}